#ifndef Actuadores_h
#define Actuadores_h

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for SSD1306 display connected using I2C
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
LiquidCrystal_I2C lcd ( 0x27, 16, 2 );

class ActividadVI {
  public:
    void show_display (void);
    void show_time (void);
    void lcd_init (void);
    void show_sensors(void);
    void oled_init (void);
    //void oled_init(void);
    
};


void ActividadVI :: oled_init (void) {
  const unsigned char epd_bitmap_logo_size [] PROGMEM = {
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x8f, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x38, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x01, 0xb0, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0x18, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x06, 0x0c, 0x00, 0x00, 0xc1, 0x80, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x00, 0x01, 0x80, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x18, 0x03, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x20, 0x00, 0x80, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x20, 0x00, 0x80, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x20, 0x00, 0x80, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x25, 0xfc, 0xb7, 0xe5, 0xbf, 0xb0, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x20, 0x00, 0x80, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x20, 0x00, 0x80, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x27, 0xe4, 0xbf, 0xa5, 0xfc, 0xb0, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x20, 0x00, 0x80, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x20, 0x00, 0x80, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x20, 0x00, 0x80, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x20, 0x00, 0x80, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x27, 0x1c, 0xb8, 0xe4, 0xe3, 0xb0, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x25, 0xf4, 0xb7, 0xa4, 0xbd, 0xb0, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x24, 0xe4, 0xb3, 0x24, 0x99, 0xb0, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x26, 0x58, 0x9b, 0x64, 0xdb, 0x30, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x23, 0xf8, 0x8f, 0xc4, 0x7e, 0x30, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x20, 0x40, 0x83, 0x04, 0x18, 0x30, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x20, 0x40, 0x83, 0x04, 0x18, 0x30, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x20, 0x41, 0x83, 0x04, 0x18, 0x30, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x01, 0xff, 
	0xff, 0x80, 0x7c, 0x00, 0xff, 0x03, 0xff, 0x03, 0xfe, 0xff, 0xf9, 0xff, 0xf0, 0x7f, 0xc1, 0xff, 
	0xff, 0x80, 0xfe, 0x03, 0xff, 0xc7, 0xff, 0xc7, 0xfe, 0xff, 0xf9, 0xff, 0xf0, 0xff, 0xe1, 0xff, 
	0xff, 0x80, 0xfe, 0x07, 0xff, 0xc7, 0xff, 0xe7, 0xfe, 0xff, 0xf9, 0xff, 0xf1, 0xff, 0xf1, 0xff, 
	0xff, 0x81, 0xfe, 0x07, 0xc3, 0xe7, 0xc1, 0xe0, 0xf0, 0x0f, 0x81, 0xe0, 0x03, 0xe0, 0xf1, 0xff, 
	0xff, 0x81, 0xff, 0x0f, 0x81, 0xe7, 0xc1, 0xe0, 0xf0, 0x0f, 0x01, 0xe0, 0x03, 0xc0, 0xf1, 0xff, 
	0xff, 0x83, 0xef, 0x0f, 0x80, 0x07, 0xc3, 0xe0, 0xf0, 0x0f, 0x01, 0xff, 0xc3, 0xc0, 0x01, 0xff, 
	0xff, 0x83, 0xcf, 0x8f, 0x0f, 0xe7, 0xff, 0xe0, 0xf0, 0x0f, 0x01, 0xff, 0xc3, 0xc0, 0x01, 0xff, 
	0xff, 0x87, 0xc7, 0x8f, 0x0f, 0xe7, 0xff, 0x80, 0xf0, 0x0f, 0x01, 0xff, 0xc3, 0xc0, 0x01, 0xff, 
	0xff, 0x87, 0xff, 0xcf, 0x8f, 0xe7, 0xff, 0xc0, 0xf0, 0x0f, 0x01, 0xe0, 0x03, 0xc0, 0x71, 0xff, 
	0xff, 0x87, 0xff, 0xc7, 0x81, 0xe7, 0xc3, 0xc0, 0xf0, 0x0f, 0x01, 0xe0, 0x03, 0xe0, 0xf9, 0xff, 
	0xff, 0x8f, 0xff, 0xc7, 0xe7, 0xe7, 0xc3, 0xe3, 0xfe, 0x0f, 0x01, 0xff, 0xf1, 0xf1, 0xf1, 0xff, 
	0xff, 0x8f, 0x03, 0xe3, 0xff, 0xc7, 0xc1, 0xf7, 0xfe, 0x0f, 0x01, 0xff, 0xf1, 0xff, 0xf1, 0xff, 
	0xff, 0x9f, 0x01, 0xe1, 0xff, 0x87, 0xc0, 0xf7, 0xfe, 0x0f, 0x01, 0xff, 0xf0, 0xff, 0xc1, 0xff, 
	0xff, 0x9e, 0x00, 0xe0, 0x7e, 0x03, 0x80, 0xf3, 0xfc, 0x07, 0x00, 0xff, 0xe0, 0x3f, 0x81, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 1040)
const int epd_bitmap_allArray_LEN = 1;
const unsigned char* epd_bitmap_allArray[1] = {
	epd_bitmap_logo_size
};
// initialize the OLED object
  if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }

  // Uncomment this if you are using SPI
  //if(!display.begin(SSD1306_SWITCHCAPVCC)) {
  //  Serial.println(F("SSD1306 allocation failed"));
  //  for(;;); // Don't proceed, loop forever
  //}

  // Clear the buffer.
  display.clearDisplay();

  // Display bitmap
  display.drawBitmap(0, 0,  epd_bitmap_logo_size, 128, 64, WHITE);
  display.display();
}
void ActividadVI :: lcd_init (void) {
  
  lcd.init();
  Serial.println("Paso 2: se inicio");
  lcd.backlight();
}

void ActividadVI :: show_sensors (void) {
  lcd.clear();
  //Para imprimir humedad
  lcd.setCursor ( 0, 0 );
  lcd.print("H: ");
  lcd.print(sans.humedad,1);// El 1 es para que solo se imprima una 1 decimal
  lcd.print(" ");

  //Para imprimir HC-SR04
  lcd.setCursor ( 8, 0 );
  lcd.print("SA: "); //Abreviaci√≥n de sensor de aproximidad
  lcd.print(sans.distancia);

  //Para imprimir LDR
  lcd.setCursor(0,1);
  lcd.print("Luz:");
  lcd.print(sans.luminosidad);

}

void ActividadVI :: show_time(void){
    lcd.setCursor(7,1);
    lcd.print("F:");
    lcd.print(myrtc.fecha);


}



#endif